#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

###############
# Compilation #
###############

compile '/style/_*/' do
end

compile '/style/*/' do
  filter :sass, Compass.sass_engine_options
end

compile '/javascript/*/' do
end

compile '/files/*/' do
end

compile '/blog/feed/' do
  filter :erb
end

compile '/blog/*/' do
  filter :markdown
  layout 'default'
end

compile '/blog/' do
  filter :haml
  layout 'default'
end

compile '*' do
  unless item.binary?
    filter item[:extension].to_sym
    layout 'default'
  end
end

###########
# Routing #
###########

route '/style/_*/' do
  nil
end

route '/style/*/' do
  item.identifier.chop + '.css'
end

route '/javascript/*/' do
  item.identifier.chop + '.js'
end

route '/files/*/' do
  [item.identifier.chop.gsub(/^\/files/,""), item[:extension]].compact.join(".")
end

route '/blog/feed/' do
  '/atom.xml'
end

route '/blog/*/' do
  if item[:draft]
    draft_route(item) + 'index.html'
  else
    blog_route(item) + 'index.html'
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

###########
# Layouts #
###########

layout '*', :haml
